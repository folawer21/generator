from determine_temp import process_temp_test
from determine_reps_system import  process_rep_system_test
from determine_other_characteristics import determine_dominant_trait, process_other_tests
from preffered_tasks import get_tasks_by_traits
import json

def pretty_print_portrait(portrait):
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–º–∞–π–ª–∏–∫ –¥–ª—è –¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç–∞
    print(f"üåü –¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç: {portrait['–¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç']}")

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–º–∞–π–ª–∏–∫ –¥–ª—è –†–µ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ç–∏–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ª–∏—á–Ω–æ—Å—Ç–∏
    print(f"üß† –†–µ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ª–∏—á–Ω–æ—Å—Ç–∏: {portrait['–†–µ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ª–∏—á–Ω–æ—Å—Ç–∏']}")

    # –í—ã–≤–æ–¥–∏–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ —Å–º–∞–π–ª–∏–∫–∞–º–∏
    print("üìù –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:")
    for category, traits in portrait["–û—Å—Ç–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏"].items():
        print(f"  ‚û°Ô∏è {category}:")
        for trait in traits:
            print(f"    - {trait}")

    # –í—ã–≤–æ–¥–∏–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –æ–±—É—á–∞—é—â–∏–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è —Å —ç–º–æ–¥–∑–∏
    print("üìö –ü–æ–¥—Ö–æ–¥—è—â–∏–µ –æ–±—É—á–∞—é—â–∏–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è:")
    for uz in portrait["–ü–æ–¥—Ö–æ–¥—è—â–∏–µ –æ–±—É—á–∞—é—â–∏–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è"]:
        print(f"  - {uz} üéØ")


def save_portrait_to_json(portrait, filename="output/portrait.json"):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Ä—Ç—Ä–µ—Ç –≤ JSON –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(portrait, f, ensure_ascii=False, indent=4)
    print(f"–ü–æ—Ä—Ç—Ä–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {filename}")

def process_psychological_test(tests, responses, tasks):
    print("üõ†Ô∏è –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∞...")

    # –®–∞–≥ 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç–∞ –Ω–∞ —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç
    dominant_temp, scores, temp_tests = process_temp_test(tests, responses)

    # –®–∞–≥ 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç–∞ –Ω–∞ —Ä–µ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ç–∏–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ª–∏—á–Ω–æ—Å—Ç–∏
    dominant_rep_system, scores, rep_tests = process_rep_system_test(tests, responses)

    # –®–∞–≥ 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
    other_results = process_other_tests(tests, responses)
    remaining_scores = other_results["scores"]
    # interpretations = other_results["interpretations"]
    dominant_traits = other_results["dominant_traits"]
    print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–µ —á–µ—Ä—Ç—ã
    dominant_only_scores = other_results["dominant_traits"]
    dominant_charachteristics = dominant_only_scores + [dominant_temp, dominant_rep_system]
    preffered_utz = get_tasks_by_traits(traits= dominant_charachteristics, data=tasks)
    # –§–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç
    final_portrait = {
        "–¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç": dominant_temp,
        "–†–µ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ª–∏—á–Ω–æ—Å—Ç–∏": dominant_rep_system,
        "–û—Å—Ç–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏": {
            "–î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–µ —á–µ—Ä—Ç—ã": dominant_only_scores,
            # "–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏": all_interpretations
        },
        "–ü–æ–¥—Ö–æ–¥—è—â–∏–µ –æ–±—É—á–∞—é—â–∏–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è": preffered_utz
    }

    print("\nüìù –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç:")
    pretty_print_portrait(final_portrait)
    save_portrait_to_json(final_portrait)
    save_portrait_to_db(final_portrait=final_portrait)
    return final_portrait

from core.models import (
    Temperament, RepresentationalSystem, PersonalityTrait,
    LearningRecommendation, Student, Group
)

def save_portrait_to_db(final_portrait: dict, student_id: int = 0):
    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞–¥–∏–º
    try:
        student = Student.objects.get(id=student_id)
    except Student.DoesNotExist:
        print(f"‚ö†Ô∏è –°—Ç—É–¥–µ–Ω—Ç —Å ID {student_id} –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞...")
        
        # –°–æ–∑–¥–∞—ë–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –∑–∞–≥–ª—É—à–µ—á–Ω—É—é –≥—Ä—É–ø–ø—É
        group, _ = Group.objects.get_or_create(name="–ó–∞–≥–ª—É—à–∫–∞-–≥—Ä—É–ø–ø–∞")
        
        # –°–æ–∑–¥–∞—ë–º —Å—Ç—É–¥–µ–Ω—Ç–∞
        student = Student.objects.create(
            id=student_id,  # –∑–∞–¥–∞—Ç—å –≤—Ä—É—á–Ω—É—é ID –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
            full_name=f"–°—Ç—É–¥–µ–Ω—Ç {student_id}",
            group=group
        )

    # –¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç
    Temperament.objects.create(
        student=student,
        temperament_type=final_portrait.get("–¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    )

    # –†–µ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
    RepresentationalSystem.objects.create(
        student=student,
        system_type=final_portrait.get("–†–µ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ç–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ª–∏—á–Ω–æ—Å—Ç–∏", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    )

    # –ß–µ—Ä—Ç—ã –ª–∏—á–Ω–æ—Å—Ç–∏
    traits = final_portrait.get("–û—Å—Ç–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏", {}).get("–î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–µ —á–µ—Ä—Ç—ã", [])
    for trait in traits:
        if isinstance(trait, str) and ":" in trait:
            trait_name, trait_value = map(str.strip, trait.split(":", 1))
        else:
            trait_name = "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞"
            trait_value = trait if isinstance(trait, str) else str(trait)

        PersonalityTrait.objects.create(
            student=student,
            trait_name=trait_name,
            trait_value=trait_value
        )

    # –û–±—É—á–∞—é—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    recommendations = final_portrait.get("–ü–æ–¥—Ö–æ–¥—è—â–∏–µ –æ–±—É—á–∞—é—â–∏–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è", [])
    for rec in recommendations:
        LearningRecommendation.objects.create(
            student=student,
            recommendation_text=rec
        )

    print(f"‚úÖ –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.full_name} —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –±–∞–∑–µ.")

